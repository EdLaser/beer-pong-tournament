generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model matches {
  uuid                        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  team_1                      String   @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  team_2                      String   @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  draw                        Boolean  @default(false)
  winner                      String?  @db.Uuid
  missing_cups_team_2         Int?     @db.SmallInt
  missing_cups_team_1         Int?     @db.SmallInt
  created_at                  DateTime @default(now()) @db.Timestamp(6)
  teams_matches_team_1Toteams teams    @relation("matches_team_1Toteams", fields: [team_1], references: [uuid], onDelete: NoAction, onUpdate: NoAction, map: "public_matches_team_1_fkey")
  teams_matches_team_2Toteams teams    @relation("matches_team_2Toteams", fields: [team_2], references: [uuid], onDelete: NoAction, onUpdate: NoAction, map: "public_matches_team_2_fkey")
  teams_matches_winnerToteams teams?   @relation("matches_winnerToteams", fields: [winner], references: [uuid], onDelete: NoAction, onUpdate: NoAction, map: "public_matches_winner_fkey")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model players {
  uuid    String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name    String
  in_team String? @db.Uuid
  teams   teams?  @relation(fields: [in_team], references: [uuid], onDelete: NoAction, onUpdate: NoAction, map: "public_players_in_team_fkey")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model teams {
  uuid                          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  team_name                     String
  created_at                    DateTime  @default(now()) @db.Timestamp(6)
  matches_matches_team_1Toteams matches[] @relation("matches_team_1Toteams")
  matches_matches_team_2Toteams matches[] @relation("matches_team_2Toteams")
  matches_matches_winnerToteams matches[] @relation("matches_winnerToteams")
  players                       players[]
}
